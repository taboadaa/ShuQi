<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.3" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <name>S32_SDK_DFP</name>
  <description>NXP S32 SDK including S32K144HFT0VLLT, S32K144LFT0MLLT basic CMSIS Device Support</description>
  <url>http://www.keil.com/pack/</url>

  <releases>
    <release version="1.0.0" date="2017-04-19">
      Initial version of NXP S32 Device Family Pack
      - based on the NXP Software Development Kit for S32 Version 1.0.0.
      - renamed *.SCF files to *.SCT (Scatter Files for ARM Linker).
      - example project for S32K144-EVB FRDM Board
      - patched device include file (CMSIS also for ARMCC, GCC, IAR).
    </release>
  </releases>

  <keywords>
    <!-- keywords for indexing -->
    <keyword>NXP</keyword>
    <keyword>Device Support</keyword>
    <keyword>Device Family Package NXP</keyword>
    <keyword>S32</keyword>
  </keywords>

  <devices>
    <family Dfamily="S32K Series" Dvendor="NXP:11">
      <description>
The NXP S32K product series of 32-bit automotive microcontrollers provides a highly integrated, low-power, safe and secure single-chip solution.
The combination of fast CPU with flexible low-power modes and the low-leakage technology process will not force any compromises on performance relative to low-power.
Our combined Cortex® M0+ and M4-based automotive MCU offerings span a broad memory space and include package options from 8 K to 2 MByte with 16 to 176 pins initially.
The ARM® Cortex M4 core architecture includes an IEEE-754 compliant single precision Floating Point Unit (FPU) with DSP functions unleashing the full potential of model-based design flows.
      </description>

      <environment name="uv">
        <CMisc>--C99</CMisc>
      </environment>

      <!-- ******************************  Subfamily 'S32K14x'  ****************************** -->
      <subFamily DsubFamily="S32K14x">
        <processor Dcore="Cortex-M4" DcoreVersion="r0p1" Dfpu="FPU" Dmpu="MPU" Dendian="Little-endian"/>

        <!-- ******************************  Device 'S32K144'  ****************************** -->
        <device Dname="S32K144">
          <compile header="platform/devices/device_registers.h"/> <!-- generates warning in PackCheck because name is not CMSIS conform -->
          <compile define="CPU_S32K144HFT0VLLT"/>
          <debug  svd="platform/devices/S32K144/S32K144.svd"/>
          <memory id="IROM1"                                           start="0x00000000" size="0x00080000" default="1" startup="1"/>
          <algorithm name="addon_cmsis/Flash/S32K144_P512_4KB_SEC.FLM" start="0x00000000" size="0x00080000" default="1"/>

          <!-- *********************** -->
          <!-- 64MHz 64LQFP -->
          <variant Dvariant="S32K144MNxxxLHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00004000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF9000" size="0x00007000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144MRxxxLHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144MFxxxLHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144MSxxxLHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144MAxxxLHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>

          <!-- 80MHz 64LQFP -->
          <variant Dvariant="S32K144HNxxxLHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00004000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF9000" size="0x00007000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144HRxxxLHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144HFxxxLHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144HSxxxLHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144HAxxxLHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>

          <!-- 112MHz 64LQFP -->
          <variant Dvariant="S32K144UNxxxLHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00004000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF9000" size="0x00007000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144URxxxLHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144UFxxxLHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144USxxxLHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>
          <variant Dvariant="S32K144UAxxxLHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="64"/>
          </variant>

          <!-- *********************** -->
          <!-- 64MHz 100LQFP -->
          <variant Dvariant="S32K144MNxxxLLx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00004000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF9000" size="0x00007000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144MRxxxLLx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144MFxxxLLx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144MSxxxLLx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144MAxxxLLx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>

          <!-- 80MHz 100LQFP -->
          <variant Dvariant="S32K144HNxxxLLx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00004000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF9000" size="0x00007000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144HRxxxLLx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144HFxxxLLx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144HSxxxLLx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144HAxxxLLx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>

          <!-- 112MHz 100LQFP -->
          <variant Dvariant="S32K144UNxxxLLx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00004000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF9000" size="0x00007000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144URxxxLLx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144UFxxxLLx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144USxxxLLx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>
          <variant Dvariant="S32K144UAxxxLLx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="QFP" n="100"/>
          </variant>

          <!-- *********************** -->
          <!-- 64MHz 100MAPBGA -->
          <variant Dvariant="S32K144MNxxxMHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00004000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF9000" size="0x00007000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144MRxxxMHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144MFxxxMHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144MSxxxMHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144MAxxxMHx">
            <processor Dclock="64000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>

          <!-- 80MHz 100MAPBGA -->
          <variant Dvariant="S32K144HNxxxMHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00004000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF9000" size="0x00007000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144HRxxxMHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144HFxxxMHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144HSxxxMHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144HAxxxMHx">
            <processor Dclock="80000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>

          <!-- 112MHz 100MAPBGA -->
          <variant Dvariant="S32K144UNxxxMHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00004000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF9000" size="0x00007000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144URxxxMHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144UFxxxMHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144USxxxMHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
          <variant Dvariant="S32K144UAxxxMHx">
            <processor Dclock="112000000"/>
            <memory id="IRAM1" start="0x20000000" size="0x00007000" init   ="0" default="1"/>
            <memory id="IRAM2" start="0x1FFF8000" size="0x00008000" init   ="0" default="0"/>
            <feature type="BGA" n="100"/>
          </variant>
        </device>

      </subFamily>
    </family>
  </devices>

  <conditions>
    <!-- one condition for each device -->
    <condition id="S32K144">
      <description>NXP S32K144 device</description>
      <accept Dvendor="NXP:11" Dname="S32K144*"/>
    </condition>
    <condition id="S32K144_48">
      <description>NXP S32K144 device with 48K RAM</description>
      <accept Dvendor="NXP:11" Dname="S32K144[MHU]N*"/>
    </condition>
    <condition id="S32K144_64">
      <description>NXP S32K144 device with 64K RAM</description>
      <accept Dvendor="NXP:11" Dname="S32K144[MHU][RFSA]*"/>
    </condition>
<!--
    <condition id="S32K144_48_AC6">
      <description>NXP S32K144 device with 48K RAM</description>
      <accept Dvendor="NXP:11" Dname="S32K144[MHU]N*"/>
      <require Tcompiler="ARMCC" Toption="AC6"/>
    </condition>
    <condition id="S32K144_64_AC6">
      <description>NXP S32K144 device with 64K RAM</description>
      <accept Dvendor="NXP:11" Dname="S32K144[MHU][RFSA]*"/>
      <require Tcompiler="ARMCC" Toption="AC6"/>
    </condition>
-->

    <!-- one condition for each device group with same coreclock/Startup -->
    <condition id="S32K14x">
      <description>NXP S32K14x devices</description>
      <accept condition="S32K144"/>
      <!--accept condition="next device with same coreclock"/-->
    </condition>

    <!-- one condition for device subfamily + CMSIS -->
    <condition id="S32K14x_CMSIS">
      <description>NXP S32K14x devices and CMSIS-CORE</description>
      <accept condition="S32K14x"/>
       <!--accept condition="next devices group within same subfamily"/-->
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <!-- one condition for all devices in this pack -->
    <condition id="S32K">
      <description>NXP S32K device and CMSIS-CORE</description>
      <accept condition="S32K14x_CMSIS"/>
      <!--accept condition="next subfamily"/-->
    </condition>

    <!--condition id="S32K Unknown">
      <description>NXP S32K unknown device and CMSIS-CORE</description>
      <require Dvendor="NXP:11" Dname="S32Kxxx"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition-->

    <condition id="S32K_ARMCC">
      <description>NXP S32K and the ARM compiler</description>
      <require condition="S32K"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="S32K_GCC">
      <description>NXP S32K and the GCC compiler</description>
      <require condition="S32K"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="S32K_IAR">
      <description>NXP S32K and the IAR compiler</description>
      <require condition="S32K"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="S32K HAL_SCG">
      <description>NXP S32K HAL SCG dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Clock"/>
    </condition>
    <condition id="S32K HAL_PCC_PORT_GPIO">
      <description>NXP S32K HAL PCC PORT GPIO dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL" Csub="PCC"/>
      <require Cclass="Device" Cgroup="SDK HAL" Csub="PORT"/>
      <require Cclass="Device" Cgroup="SDK HAL" Csub="GPIO"/>
    </condition>
    <condition id="S32K HAL_PCC_PORT_GPIO_ADC">
      <description>NXP S32K HAL PCC PORT GPIO ADC dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL" Csub="PCC"/>
      <require Cclass="Device" Cgroup="SDK HAL" Csub="PORT"/>
      <require Cclass="Device" Cgroup="SDK HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="SDK HAL" Csub="ADC"/>
    </condition>

    <condition id="S32K DRV_ADC">
      <description>NXP S32K Driver ADC dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="ADC"/>
    </condition>
    <condition id="S32K DRV_Clock">
      <description>NXP S32K System Clock dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="PCC"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="SCG"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="SIM"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>
    <condition id="S32K DRV_CMP">
      <description>NXP S32K Driver CMP dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="CMP"/>
    </condition>
    <condition id="S32K DRV_CRC">
      <description>NXP S32K Driver CRC dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="CRC"/>
    </condition>
    <condition id="S32K DRV_CSEC">
      <description>NXP S32K Driver CSEC dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="CSEC"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>
    <condition id="S32K DRV_eDMA">
      <description>NXP S32K Driver eDMA dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="eDMA"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="DMAMUX"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>
    <condition id="S32K DRV_EIM">
      <description>NXP S32K Driver EIM dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="EIM"/>
    </condition>
    <condition id="S32K DRV_ERM">
      <description>NXP S32K Driver ERM dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="ERM"/>
    </condition>
    <condition id="S32K DRV_EWM">
      <description>NXP S32K Driver EWM dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="EWM"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>
    <condition id="S32K DRV_FTM">
      <description>NXP S32K Driver FTM dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="FTM"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Clock"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>
    <condition id="S32K DRV_FlexCAN">
      <description>NXP S32K Driver FlexCAN dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="FlexCAN"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="eDMA"/>
      <require Cclass="Device" Cgroup="SDK OSIF"   Csub="OSIF"/>
    </condition>
    <condition id="S32K DRV_FlexIO">
      <description>NXP S32K Driver FLEXIO dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="FLEXIO"/>
      <require Cclass="Device" Cgroup="SDK OSIF"   Csub="OSIF"/>
    </condition>
    <condition id="S32K DRV_FlexIO_I2C">
      <description>NXP S32K Driver FLEXIO I2C dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="FlexIO"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="S32K DRV_FlexIO_I2S">
      <description>NXP S32K Driver FLEXIO I2S dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="FlexIO"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="S32K DRV_FlexIO_SPI">
      <description>NXP S32K Driver FLEXIO SPI dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="FlexIO"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="S32K DRV_FlexIO_UART">
      <description>NXP S32K Driver FLEXIO UART dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="FlexIO"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="eDMA"/>
    </condition>
    <condition id="S32K DRV_GPIO">
      <description>NXP S32K Driver GPIO dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="GPIO"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="PORT"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Clock"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>
    <condition id="S32K DRV_LIN">
      <description>NXP S32K Driver LIN dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="LPUART"/>
      <require Cclass="Device" Cgroup="SDK OSIF"   Csub="OSIF"/>
    </condition>
    <condition id="S32K DRV_LPI2C">
      <description>NXP S32K Driver LPI2C dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="LPI2C"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="eDMA"/>
      <require Cclass="Device" Cgroup="SDK OSIF"   Csub="OSIF"/>
    </condition>
    <condition id="S32K DRV_LPIT">
      <description>NXP S32K Driver LPIT dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="LPIT"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Clock"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>
    <condition id="S32K DRV_LPSPI">
      <description>NXP S32K Driver LPSPI dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="LPSPI"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="eDMA"/>
      <require Cclass="Device" Cgroup="SDK OSIF"   Csub="OSIF"/>
    </condition>
    <condition id="S32K DRV_LPTMR">
      <description>NXP S32K Driver LPTMR dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="LPTMR"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Clock"/>
    </condition>
    <condition id="S32K DRV_LPUART">
      <description>NXP S32K Driver LPUART IRQ dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="LPUART"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="eDMA"/>
      <require Cclass="Device" Cgroup="SDK OSIF"   Csub="OSIF"/>
    </condition>
    <condition id="S32K DRV_MPU">
      <description>NXP S32K Driver MPU dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="MPU"/>
    </condition>
    <condition id="S32K DRV_PDB">
      <description>NXP S32K Driver PDB dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="PDB"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Clock"/>
    </condition>
    <condition id="S32K DRV_PINS">
      <description>NXP S32K Driver PINS dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="PORT"/>
    </condition>
    <condition id="S32K DRV_Power">
      <description>NXP S32K System Power dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="SMC"/>
    </condition>
    <condition id="S32K DRV_RTC">
      <description>NXP S32K Driver RTC dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="RTC"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>
    <condition id="S32K DRV_TRGMUX">
      <description>NXP S32K Driver TRGMUX dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="TRGMUX"/>
    </condition>
    <condition id="S32K DRV_WDOG">
      <description>NXP S32K Driver WDOG dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK HAL"    Csub="WDOG"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>

    <condition id="S32K OSIF_BM">
      <description>NXP S32K OSIF Bare Metal dependency</description>
      <require condition="S32K"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Clock"/>
      <require Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"/>
    </condition>

  </conditions>

  <taxonomy>
    <description Cclass="Device" Cgroup="SDK HAL">S32 SDK Hardware Abstraction Layer (HAL)</description>
    <description Cclass="Device" Cgroup="SDK Driver">S32 SDK Peripheral Drivers</description>
  </taxonomy>

  <apis>
    <api Cclass="Device" Cgroup="SDK API" exclusive="1">
      <description>S32 SDK API</description>
      <files>
        <file category="doc" name="doc/S32_SDK_API_Documentation.pdf"/>
      </files>
    </api>
    <api Cclass="Device" Cgroup="SDK Quick Start Guide" exclusive="1">
      <description>S32 SDK Quick Start Guide</description>
      <files>
        <file category="doc" name="doc/S32SDKQSG.pdf"/>
      </files>
    </api>
  </apis>

  <components>
    <!-- Startup for toolchain ARMCC V5 -->
    <component Cclass="Device" Cgroup="Startup" Cversion="2.0.0" condition="S32K_ARMCC">
      <description>System Startup for NXP S32K Series</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_DEVICE_STARTUP_S32K      /* Device Startup for S32K Series */
      </RTE_Components_h>
      <files>
        <!-- include folders -->
        <file category="header"  name="platform/devices/device_registers.h"/> <!-- generates warning in PackCheck because name is not CMSIS conform -->
        <file category="include" name="platform/devices/"/>
        <file category="include" name="platform/devices/common/"/>

        <!-- startup files -->
        <file category="source" name="platform/devices/startup.c"/>
        <file category="source" name="platform/devices/S32K144/startup/arm/startup_S32K144.s" attr="config" version="2.0.0" condition="S32K144"/>

        <!-- system files -->
        <file category="header" name="platform/devices/S32K144/startup/system_S32K144.h" attr="config" version="2.0.0" condition="S32K144"/>
        <file category="source" name="platform/devices/S32K144/startup/system_S32K144.c" attr="config" version="2.0.0" condition="S32K144"/>

        <!-- linker scripts -->  <!-- RAM linker scripts have the category "other": Files are copied but not treated automatically as linker scripts -->
        <file category="linkerScript" name="platform/devices/S32K144/linker/arm/S32K144_48_flash.sct"     attr="config" version="2.0.0" condition="S32K144_48"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/arm/S32K144_48_ram.sct"       attr="config" version="2.0.0" condition="S32K144_48"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/arm/S32K144_64_flash.sct"     attr="config" version="2.0.0" condition="S32K144_64"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/arm/S32K144_64_ram.sct"       attr="config" version="2.0.0" condition="S32K144_64"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/arm/S32K144_48_flash_AC6.sct" attr="config" version="2.0.0" condition="S32K144_48"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/arm/S32K144_48_ram_AC6.sct"   attr="config" version="2.0.0" condition="S32K144_48"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/arm/S32K144_64_flash_AC6.sct" attr="config" version="2.0.0" condition="S32K144_64"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/arm/S32K144_64_ram_AC6.sct"   attr="config" version="2.0.0" condition="S32K144_64"/>
      </files>
    </component>

    <!-- Startup for toolchain GCC -->
    <component Cclass="Device" Cgroup="Startup" Cversion="2.0.0" condition="S32K_GCC">
      <description>System Startup for NXP S32K Series</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_DEVICE_STARTUP_S32K      /* Device Startup for S32K Series */
      </RTE_Components_h>
      <files>
        <!-- include folders -->
        <file category="header"  name="platform/devices/device_registers.h"/> <!-- generates warning in PackCheck because name is not CMSIS conform -->
        <file category="include" name="platform/devices/"/>
        <file category="include" name="platform/devices/common/"/>

        <!-- startup files -->
        <file category="source" name="platform/devices/startup.c"/>
        <file category="source" name="platform/devices/S32K144/startup/gcc/startup_S32K144.S" attr="config" version="2.0.0" condition="S32K144"/>

        <!-- system files -->
        <file category="header" name="platform/devices/S32K144/startup/system_S32K144.h" attr="config" version="2.0.0" condition="S32K144"/>
        <file category="source" name="platform/devices/S32K144/startup/system_S32K144.c" attr="config" version="2.0.0" condition="S32K144"/>

        <!-- linker scripts -->  <!-- RAM linker scripts have the category "other": Files are copied but not treated automatically as linker scripts -->
        <file category="linkerScript" name="platform/devices/S32K144/linker/gcc/S32K144_48_flash.ld"  attr="config" version="2.0.0" condition="S32K144_48"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/gcc/S32K144_48_ram.ld"    attr="config" version="2.0.0" condition="S32K144_48"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/gcc/S32K144_64_flash.ld"  attr="config" version="2.0.0" condition="S32K144_64"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/gcc/S32K144_64_ram.ld"    attr="config" version="2.0.0" condition="S32K144_64"/>
      </files>
    </component>

    <!-- Startup for toolchain IAR -->
    <component Cclass="Device" Cgroup="Startup" Cversion="2.0.0" condition="S32K_IAR">
      <description>System Startup for NXP S32K Series</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_DEVICE_STARTUP_S32K      /* Device Startup for S32K Series */
      </RTE_Components_h>
      <files>
        <!-- include folders -->
        <file category="header"  name="platform/devices/device_registers.h"/> <!-- generates warning in PackCheck because name is not CMSIS conform -->
        <file category="include" name="platform/devices/"/>
        <file category="include" name="platform/devices/common/"/>

        <!-- startup files -->
        <file category="source" name="platform/devices/startup.c"/>
        <file category="source" name="platform/devices/S32K144/startup/iar/startup_S32K144.s" attr="config" version="2.0.0" condition="S32K144"/>

        <!-- system files -->
        <file category="header" name="platform/devices/S32K144/startup/system_S32K144.h" attr="config" version="2.0.0" condition="S32K144"/>
        <file category="source" name="platform/devices/S32K144/startup/system_S32K144.c" attr="config" version="2.0.0" condition="S32K144"/>

        <!-- linker scripts -->  <!-- RAM linker scripts have the category "other": Files are copied but not treated automatically as linker scripts -->
        <file category="linkerScript" name="platform/devices/S32K144/linker/iar/S32K144_48_flash.icf" attr="config" version="2.0.0" condition="S32K144_48"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/iar/S32K144_48_ram.icf"   attr="config" version="2.0.0" condition="S32K144_48"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/iar/S32K144_64_flash.icf" attr="config" version="2.0.0" condition="S32K144_64"/>
        <file category="linkerScript" name="platform/devices/S32K144/linker/iar/S32K144_64_ram.icf"   attr="config" version="2.0.0" condition="S32K144_64"/>
      </files>
    </component>

    <!-- SDK HAL -->
    <component Cclass="Device" Cgroup="SDK HAL" Csub="ADC"     Cversion="1.0.0" condition="S32K">
      <description>Analog-to-digital converter (ADC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ADC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__adc__hal.html"/>
        <file category="header" name="platform/hal/inc/adc_hal.h"/>
        <file category="source" name="platform/hal/src/adc/adc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="CMP"     Cversion="1.0.0" condition="S32K">
      <description>Comparator (CMP)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CMP
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__cmp__hal.html"/>
        <file category="header" name="platform/hal/inc/cmp_hal.h"/>
        <file category="source" name="platform/hal/src/cmp/cmp_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="CRC"     Cversion="1.0.0" condition="S32K">
      <description>Cyclic Redundancy Check (CRC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CRC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__crc__hal.html"/>
        <file category="header" name="platform/hal/inc/crc_hal.h"/>
        <file category="source" name="platform/hal/src/crc/crc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="CSEC"    Cversion="1.0.0" condition="S32K">
      <description>Cryptographic Services Engine (CSEc)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CSEC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__csec__hal.html"/>
        <file category="header" name="platform/hal/inc/csec_hal.h"/>
        <file category="source" name="platform/hal/src/csec/csec_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="DMAMUX"  Cversion="1.0.0" condition="S32K">
      <description>Direct Memory Access Multiplexer (DMAMUX)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DMAMUX
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__dmamux__hal.html"/>
        <file category="header" name="platform/hal/inc/dmamux_hal.h"/>
        <file category="source" name="platform/hal/src/dmamux/dmamux_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="eDMA"    Cversion="1.0.0" condition="S32K">
      <description>Enhanced Direct Memory Access (eDMA)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_EDMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__edma__hal.html"/>
        <file category="header" name="platform/hal/inc/edma_hal.h"/>
        <file category="source" name="platform/hal/src/edma/edma_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="EIM"     Cversion="1.0.0" condition="S32K">
      <description>Error Injection Module (EIM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_EIM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__eim__hal.html"/>
        <file category="header" name="platform/hal/inc/eim_hal.h"/>
        <file category="source" name="platform/hal/src/eim/eim_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="ERM"     Cversion="1.0.0" condition="S32K">
      <description>Error Reporting Module (ERM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ERM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__erm__hal.html"/>
        <file category="header" name="platform/hal/inc/erm_hal.h"/>
        <file category="source" name="platform/hal/src/erm/erm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="EWM"     Cversion="1.0.0" condition="S32K">
      <description>External Watchdog Timer (EWM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_EWM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__ewm__hal.html"/>
        <file category="header" name="platform/hal/inc/ewm_hal.h"/>
        <file category="source" name="platform/hal/src/ewm/ewm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="FlexCAN" Cversion="1.0.0" condition="S32K">
      <description>Controller Area Network (FlexCAN)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLEXCAN
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__flexcan__hal.html"/>
        <file category="header" name="platform/hal/inc/flexcan_hal.h"/>
        <file category="source" name="platform/hal/src/flexcan/flexcan_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="FLEXIO"  Cversion="1.0.0" condition="S32K">
      <description>FlexIO (FLEXIO)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLEXIO
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__flexio__hal.html"/>
        <file category="header" name="platform/hal/inc/flexio_hal.h"/>
        <file category="source" name="platform/hal/src/flexio/flexio_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="FTM"     Cversion="1.0.0" condition="S32K">
      <description>FlexTimer (FTM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FTM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__ftm__hal.html"/>
        <file category="header" name="platform/hal/inc/ftm_hal.h"/>
        <file category="source" name="platform/hal/src/ftm/ftm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="GPIO"    Cversion="1.0.0" condition="S32K">
      <description>General Purpose Input/Output (GPIO)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_GPIO
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__gpio__hal.html"/>
        <file category="header" name="platform/hal/inc/gpio_hal.h"/>
        <!--file category="source" name="platform/hal/src/gpio/gpio_hal.c"/-->
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="LPI2C"   Cversion="1.0.0" condition="S32K">
      <description>Low Power Inter-Integrated Circuit (LPI2C)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPI2C
      </RTE_Components_h>
      <files>
        <file category="doc"     name="doc/html/group__lpi2c__hal.html"/>
        <file category="header"  name="platform/hal/inc/lpi2c_hal.h"/>
        <file category="source"  name="platform/hal/src/lpi2c/lpi2c_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="LPIT"    Cversion="1.0.0" condition="S32K">
      <description>Low Power Interrupt Timer (LPIT)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPIT
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lpit__hal.html"/>
        <file category="header" name="platform/hal/inc/lpit_hal.h"/>
        <file category="source" name="platform/hal/src/lpit/lpit_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="LPSPI"   Cversion="1.0.0" condition="S32K">
      <description>Low Power Serial Peripheral Interface (LPSPI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPSPI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lpspi__hal.html"/>
        <file category="header" name="platform/hal/inc/lpspi_hal.h"/>
        <file category="source" name="platform/hal/src/lpspi/lpspi_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="LPTMR"   Cversion="1.0.0" condition="S32K">
      <description>Low Power Timer (LPTMR)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPTMR
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lptmr__hal.html"/>
        <file category="header" name="platform/hal/inc/lptmr_hal.h"/>
        <file category="source" name="platform/hal/src/lptmr/lptmr_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="LPUART"  Cversion="1.0.0" condition="S32K">
      <description>Low Power Universal Asynchronous Receiver/Transmitter (LPUART)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPUART
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lpuart__hal.html"/>
        <file category="header" name="platform/hal/inc/lpuart_hal.h"/>
        <file category="source" name="platform/hal/src/lpuart/lpuart_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="MPU"     Cversion="1.0.0" condition="S32K">
      <description>Memory Protection Unit (MPU)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MPU
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__mpu__hal.html"/>
        <file category="header" name="platform/hal/inc/mpu_hal.h"/>
        <file category="source" name="platform/hal/src/mpu/mpu_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="PCC"     Cversion="1.0.0" condition="S32K">
      <description>Peripheral Clock Control (PCC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PCC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__pcc__hal.html"/>
        <file category="header" name="platform/hal/inc/pcc_hal.h"/>
        <file category="source" name="platform/hal/src/pcc/pcc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="PDB"     Cversion="1.0.0" condition="S32K">
      <description>Programmable Delay Block (PDB)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PDB
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__pdb__hal.html"/>
        <file category="header" name="platform/hal/inc/pdb_hal.h"/>
        <file category="source" name="platform/hal/src/pdb/pdb_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="PMC"     Cversion="1.0.0" condition="S32K">
      <description>Power Management Controller (PMC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PMC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__pmc__hal.html"/>
        <file category="header" name="platform/hal/inc/pmc_hal.h"/>
        <file category="source" name="platform/hal/src/pmc/pmc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="PORT"    Cversion="1.0.0" condition="S32K">
      <description>Port Control and Interrupts (PORT)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PORT
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__port__hal.html"/>
        <file category="header" name="platform/hal/inc/port_hal.h"/>
        <file category="source" name="platform/hal/src/port/port_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="RCM"     Cversion="1.0.0" condition="S32K">
      <description>Reset Control Module (RCM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RCM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__rcm__hal.html"/>
        <file category="header" name="platform/hal/inc/rcm_hal.h"/>
        <file category="source" name="platform/hal/src/rcm/rcm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="RTC"     Cversion="1.0.0" condition="S32K">
      <description>Real Time Clock (RTC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RTC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__rtc__hal.html"/>
        <file category="header" name="platform/hal/inc/rtc_hal.h"/>
        <file category="source" name="platform/hal/src/rtc/rtc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="SCG"     Cversion="1.0.0" condition="S32K HAL_SCG">
      <description>System Clock Generator (SCG)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SCG
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__scg__hal.html"/>
        <file category="header" name="platform/hal/inc/scg_hal.h"/>
        <file category="source" name="platform/hal/src/scg/scg_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="SIM"     Cversion="1.0.0" condition="S32K">
      <description>System Integration Module (SIM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SIM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__sim__hal.html"/>
        <file category="header" name="platform/hal/inc/sim_hal.h"/>
        <file category="source" name="platform/hal/src/sim/S32K144/sim_hal_S32K144.c" condition="S32K14x"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="SMC"     Cversion="1.0.0" condition="S32K">
      <description>System Mode Controller (SMC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SMC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__smc__hal.html"/>
        <file category="header" name="platform/hal/inc/smc_hal.h"/>
        <file category="source" name="platform/hal/src/smc/smc_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="TRGMUX"  Cversion="1.0.0" condition="S32K">
      <description>Trigger MUX Control (TRGMUX)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_TRGMUX
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__trgmux__hal.html"/>
        <file category="header" name="platform/hal/inc/trgmux_hal.h"/>
        <file category="source" name="platform/hal/src/trgmux/trgmux_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK HAL" Csub="WDOG"    Cversion="1.0.0" condition="S32K">
      <description>Watchdog Timer (WDOG)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_WDOG
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__wdog__hal.html"/>
        <file category="header" name="platform/hal/inc/wdog_hal.h"/>
        <file category="source" name="platform/hal/src/wdog/wdog_hal.c"/>
      </files>
    </component>

    <!-- SDK Driver -->
    <component Cclass="Device" Cgroup="SDK Driver" Csub="ADC"           Cversion="1.0.0" condition="S32K DRV_ADC">
      <description>Analog-to-digital converter (ADC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_ADC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__adc__driver.html"/>
        <file category="header" name="platform/drivers/inc/adc_driver.h"/>
        <file category="source" name="platform/drivers/src/adc/adc_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="Clock"         Cversion="1.0.0" condition="S32K DRV_Clock">
      <description>Clock Manager (Clock)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_CLOCK
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__clock__manager.html"/>
        <file category="header" name="platform/drivers/inc/clock_manager.h"/>
        <file category="source" name="platform/drivers/src/clock/clock_manager.c"/>
        <file category="source" name="platform/drivers/src/clock/S32K144/clock_S32K144.c" condition="S32K14x"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="CMP"           Cversion="1.0.0" condition="S32K DRV_CMP">
      <description>Comparator (CMP)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_CMP
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__cmp__driver.html"/>
        <file category="header" name="platform/drivers/inc/cmp_driver.h"/>
        <file category="source" name="platform/drivers/src/cmp/cmp_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="CRC"           Cversion="1.0.0" condition="S32K DRV_CRC">
      <description>Cyclic Redundancy Check (CRC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_CRC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__crc__driver.html"/>
        <file category="header" name="platform/drivers/inc/crc_driver.h"/>
        <file category="source" name="platform/drivers/src/crc/crc_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="CSEC"          Cversion="1.0.0" condition="S32K DRV_CSEC">
      <description>Cryptographic Services Engine (CSEc)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_CSEC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__csec__driver.html"/>
        <file category="header" name="platform/drivers/inc/csec_driver.h"/>
        <file category="source" name="platform/drivers/src/csec/csec_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="eDMA"          Cversion="1.0.0" condition="S32K DRV_eDMA">
      <description>Enhanced Direct Memory Access (eDMA)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_EDMA
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__edma__driver.html"/>
        <file category="header" name="platform/drivers/inc/edma_driver.h"/>
        <file category="source" name="platform/drivers/src/edma/edma_driver.c"/>
        <file category="source" name="platform/drivers/src/edma/edma_common.c"/>
        <file category="source" name="platform/drivers/src/edma/edma_irq.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="EIM"           Cversion="1.0.0" condition="S32K DRV_EIM">
      <description>Error Injection Module (EIM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_EIM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__eim__drv.html"/>
        <file category="header" name="platform/drivers/inc/eim_driver.h"/>
        <file category="source" name="platform/drivers/src/eim/eim_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="ERM"           Cversion="1.0.0" condition="S32K DRV_ERM">
      <description>Error Reporting Module (ERM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_ERM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__erm__driver.html"/>
        <file category="header" name="platform/drivers/inc/erm_driver.h"/>
        <file category="source" name="platform/drivers/src/erm/erm_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="EWM"           Cversion="1.0.0" condition="S32K DRV_EWM">
      <description>External Watchdog Timer (EWM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_EWM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__ewm__drv.html"/>
        <file category="header" name="platform/drivers/inc/ewm_driver.h"/>
        <file category="source" name="platform/drivers/src/ewm/ewm_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="Flash"         Cversion="1.0.0" condition="S32K">
      <description>Flash Memory (Flash)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLASH
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__flash__driver.html"/>
        <file category="header" name="platform/drivers/inc/flash_driver.h"/>
        <file category="source" name="platform/drivers/src/flash/flash_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="FlexCAN"       Cversion="1.0.0" condition="S32K DRV_FlexCAN">
      <description>Controller Area Network (FlexCAN)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXCAN
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__flexcan__driver.html"/>
        <file category="header" name="platform/drivers/inc/flexcan_driver.h"/>
        <file category="source" name="platform/drivers/src/flexcan/flexcan_common.c"/>
        <file category="source" name="platform/drivers/src/flexcan/flexcan_driver.c"/>
        <file category="source" name="platform/drivers/src/flexcan/flexcan_irq.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="FlexIO"        Cversion="1.0.0" condition="S32K DRV_FlexIO">
      <description>Flexible I/O (Common)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__flexio.html"/>
        <file category="header" name="platform/drivers/inc/flexio.h"/>
        <file category="source" name="platform/drivers/src/flexio/flexio_common.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="FlexIO (I2C)"  Cversion="1.0.0" condition="S32K DRV_FlexIO_I2C">
      <description>FlexIO (I2C)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO_I2C
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__flexio__i2c__drv.html"/>
        <file category="source" name="platform/drivers/src/flexio/flexio_i2c_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="FlexIO (I2S)"  Cversion="1.0.0" condition="S32K DRV_FlexIO_I2S">
      <description>FlexIO (I2S)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO_I2S
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__flexio__i2s__drv.html"/>
        <file category="source" name="platform/drivers/src/flexio/flexio_i2s_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="FlexIO (SPI)"  Cversion="1.0.0" condition="S32K DRV_FlexIO_SPI">
      <description>FlexIO (SPI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO_SPI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__flexio__spi__drv.html"/>
        <file category="source" name="platform/drivers/src/flexio/flexio_spi_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="FlexIO (UART)" Cversion="1.0.0" condition="S32K DRV_FlexIO_UART">
      <description>FlexIO (UART)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FLEXIO_UART
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__flexio__uart__drv.html"/>
        <file category="source" name="platform/drivers/src/flexio/flexio_uart_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="FTM"           Cversion="1.0.0" condition="S32K DRV_FTM">
      <description>FlexTimer (FTM)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_FTM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__ftm__driver.html"/>
        <file category="header" name="platform/drivers/inc/ftm_driver.h"/>
        <file category="source" name="platform/drivers/src/ftm/ftm_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="Interrupt"     Cversion="1.0.0" condition="S32K">
      <description>Interrupt Manager (Interrupt)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_INTERRUPT
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__interrupt__manager.html"/>
        <file category="header" name="platform/drivers/inc/interrupt_manager.h"/>
        <file category="source" name="platform/drivers/src/interrupt/interrupt_manager.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="LIN"           Cversion="1.0.0" condition="S32K DRV_LIN">
      <description>Local Interconnect Network (LIN)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LIN
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lin__driver.html"/>
        <file category="header" name="platform/drivers/inc/lin_driver.h"/>
        <file category="source" name="platform/drivers/src/lin/lin_common.c"/>
        <file category="source" name="platform/drivers/src/lin/lin_driver.c"/>
        <file category="source" name="platform/drivers/src/lin/lin_irq.c"/>
        <file category="source" name="platform/drivers/src/lin/lin_lpuart_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="LPI2C"         Cversion="1.0.0" condition="S32K DRV_LPI2C">
      <description>Low Power Inter-Integrated Circuit (LPI2C)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPI2C
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lpi2c__drv.html"/>
        <file category="header" name="platform/drivers/inc/lpi2c_driver.h"/>
        <file category="source" name="platform/drivers/src/lpi2c/lpi2c_driver.c"/>
        <file category="source" name="platform/drivers/src/lpi2c/lpi2c_irq.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="LPIT"          Cversion="1.0.0" condition="S32K DRV_LPIT">
      <description>Low Power Interrupt Timer (LPIT)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPIT
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lpit__drv.html"/>
        <file category="header" name="platform/drivers/inc/lpit_driver.h"/>
        <file category="source" name="platform/drivers/src/lpit/lpit_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="LPSPI"         Cversion="1.0.0" condition="S32K DRV_LPSPI">
      <description>Low Power Serial Peripheral Interface (LPSPI)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPSPI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lpspi__driver.html"/>
        <file category="include" name="platform/devices/S32K144/include/"/>
        <file category="header" name="platform/drivers/inc/lpspi_master_driver.h"/>
        <file category="header" name="platform/drivers/inc/lpspi_slave_driver.h"/>
        <file category="header" name="platform/drivers/inc/lpspi_shared_function.h"/>
        <file category="source" name="platform/drivers/src/lpspi/lpspi_master_driver.c"/>
        <file category="source" name="platform/drivers/src/lpspi/lpspi_slave_driver.c"/>
        <file category="source" name="platform/drivers/src/lpspi/lpspi_shared_function.c"/>
        <file category="source" name="platform/drivers/src/lpspi/lpspi_irq.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="LPTMR"         Cversion="1.0.0" condition="S32K DRV_LPTMR">
      <description>Low Power Timer (LPTMR)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPTMR
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lptmr__driver.html"/>
        <file category="header" name="platform/drivers/inc/lptmr_driver.h"/>
        <file category="source" name="platform/drivers/src/lptmr/lptmr_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="LPUART"        Cversion="1.0.0" condition="S32K DRV_LPUART">
      <description>Low Power Universal Asynchronous Receiver/Transmitter (LPUART)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_LPUART
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__lpuart__driver.html"/>
        <file category="header" name="platform/drivers/inc/lpuart_driver.h"/>
        <file category="source" name="platform/drivers/src/lpuart/lpuart_driver.c"/>
        <file category="source" name="platform/drivers/src/lpuart/lpuart_common.c"/>
        <file category="source" name="platform/drivers/src/lpuart/lpuart_irq.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="MPU"           Cversion="1.0.0" condition="S32K DRV_MPU">
      <description>Memory Protection Unit (MPU)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_MPU
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__mpu__drv.html"/>
        <file category="header" name="platform/drivers/inc/mpu_driver.h"/>
        <file category="source" name="platform/drivers/src/mpu/mpu_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="PDB"           Cversion="1.0.0" condition="S32K DRV_PDB">
      <description>Programmable Delay Block (PDB)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_PDB
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__pdb__driver.html"/>
        <file category="header" name="platform/drivers/inc/pdb_driver.h"/>
        <file category="source" name="platform/drivers/src/pdb/pdb_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="PINS"          Cversion="1.0.0" condition="S32K DRV_PINS">
      <description>Pins</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_PINS
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__pins__driver.html"/>
        <file category="header" name="platform/drivers/inc/pins_driver.h"/>
        <file category="source" name="platform/drivers/src/pins/pins_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="Power"         Cversion="1.0.0" condition="S32K DRV_Power">
      <description>Power Manager (Power)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_POWER
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__power__manager.html"/>
        <file category="header" name="platform/drivers/inc/power_manager.h"/>
        <file category="source" name="platform/drivers/src/power/power_manager_common.c"/>
        <file category="source" name="platform/drivers/src/power/power_manager_smc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="RTC"           Cversion="1.0.0" condition="S32K DRV_RTC">
      <description>Real Time Clock (RTC)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_RTC
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__rtc__driver.html"/>
        <file category="header" name="platform/drivers/inc/rtc_driver.h"/>
        <file category="source" name="platform/drivers/src/rtc/rtc_driver.c"/>
        <file category="source" name="platform/drivers/src/rtc/rtc_irq.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="TRGMUX"        Cversion="1.0.0" condition="S32K DRV_TRGMUX">
      <description>Trigger MUX Control (TRGMUX)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_SAI
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__trgmux__driver.html"/>
        <file category="header" name="platform/drivers/inc/trgmux_driver.h"/>
        <file category="source" name="platform/drivers/src/trgmux/trgmux_driver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Driver" Csub="WDOG"          Cversion="1.0.0" condition="S32K DRV_WDOG">
      <description>Watchdog Timer (WDOG)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_DRIVER_WDOG
      </RTE_Components_h>
      <files>
         <file category="doc"    name="doc/html/group__wdog__drv.html"/>
        <file category="header" name="platform/drivers/inc/wdog_driver.h"/>
        <file category="source" name="platform/drivers/src/wdog/wdog_driver.c"/>
      </files>
    </component>

    <!-- SDK OSA -->
    <component Cclass="Device" Cgroup="SDK OSIF" Csub="OSIF" Cvariant="Bare Metal" Cversion="1.0.0" condition="S32K OSIF_BM">
      <description>Bare Metal Abstraction Layer (no RTOS)</description>
      <RTE_Components_h>
        #define RTE_DEVICE_OSIF_BM
      </RTE_Components_h>
      <files>
        <file category="doc"    name="doc/html/group__osif.html"/>
        <file category="header" name="rtos/osif/osif.h"/>
        <file category="source" name="rtos/osif/osif_baremetal.c"/>
      </files>
    </component>

    <bundle Cbundle="S32K144-EVB" Cclass="Board Support" Cversion="1.0.0">
      <description>NXP S32K144-EVB Development Board</description>
      <doc>http://www.nxp.com/assets/documents/data/en/quick-start-guide/S32K144EVB-QSG.pdf</doc>
      <component Cgroup="LED"           Capiversion="1.0.0" condition="S32K HAL_PCC_PORT_GPIO">
        <description>LED Interface for FRDM-K64F</description>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/S32K144-EVB/Common/LED_S32K144-EVB.c"/>
        </files>
      </component>
      <component Cgroup="Buttons"       Capiversion="1.0.0" condition="S32K HAL_PCC_PORT_GPIO">
        <description>Buttons Interface for S32K144-EVB</description>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/S32K144-EVB/Common/Buttons_S32K144-EVB.c"/>
        </files>
      </component>
      <component Cgroup="A/D Converter" Capiversion="1.0.0" condition="S32K HAL_PCC_PORT_GPIO_ADC">
        <description>A/D Converter Interface for S32K144-EVB</description>
        <files>
          <file category="source" name="addon_mdk/Boards/NXP/S32K144-EVB/Common/ADC_S32K144-EVB.c"/>
        </files>
      </component>
    </bundle>

  </components>

  <boards>
    <board name="S32K144-EVB" vendor="NXP" revision="Rev. A" salesContact="http://www.nxp.com/support/sales-and-support:SUPPORTHOME">
      <mountedDevice    deviceIndex="0" Dvendor="NXP:11" Dname="S32K144UAT0xxxx"/>
      <compatibleDevice deviceIndex="0" Dvendor="NXP:11" DsubFamily="S32K14x"/>
      <image small="addon_mdk/Boards/NXP/S32K144-EVB/Documents/S32K144-EVB_small.png"
             large="addon_mdk/Boards/NXP/S32K144-EVB/Documents/S32K144-EVB_large.png"/>
      <description>
        The S32K144-EVB is a development board for the S32K144 32-bit ARM® Cortex™-M4 MCUs.
      </description>
      <book category="overview"  name="http://www.nxp.com/products/automotive-products/microcontrollers-and-processors/arm-mcus-and-mpus/s32-processors-microcontrollers/s32k144-evaluation-board:S32K144EVB" title="S32K144 Evaulation Board"/>
      <book category="setup"     name="http://www.nxp.com/assets/documents/data/en/quick-start-guide/S32K144EVB-QSG.pdf" title="Getting Started Guide"/>
      <book category="schematic" name="http://www.nxp.com/assets/downloads/data/en/schematics/S32K144EVB-SCH.pdf" title="S32K144EVB-Q100 Schematics"/>
      <book category="manual"    name="http://www.nxp.com/assets/downloads/data/en/board-support-packages/S32K144EVB-QSP.zip" title="S32K144EVB Quick Start Package"/>
      <feature type="ODbg"          n="1"              name="Onboard open-standard serial and debug adaptor (OpenSDA)"/>
      <feature type="PWR"           n="5"              name="USB Powered"/>
      <feature type="Button"        n="4"              name="Push-buttons: Reset, OpenSDA Reset, 2x User"/>
      <feature type="Button"        n="2"              name="2x capacitive touch"/>
      <feature type="LED"           n="1"              name="RGB LED"/>
      <feature type="Poti"          n="1"              name="Potentiometer for voltage and analog measurement"/>
      <debugInterface adapter="JTAG/SW" connector="10 pin Cortex debug (0.05 inch connector)"/>
      <debugInterface adapter="JTAG/SW" connector="SDA 10 pin Cortex debug (0.05 inch connector)"/>
    </board>
  </boards>

  <examples>
    <!-- S32K144-EVB FRDM Board -->
    <example name="CMSIS-RTOS2 Blinky" doc="Abstract.txt" folder="addon_mdk/Boards/NXP/S32K144-EVB/RTX5_Blinky/">
      <description>CMSIS-RTOS2 Blinky example</description>
      <board name="S32K144-EVB" vendor="NXP" Dvendor="NXP:11" Dname="S32K144UAT0xxxx"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <category>Getting Started</category>
        <category>CMSIS-RTX</category>
      </attributes>
    </example>
  </examples>

</package>
