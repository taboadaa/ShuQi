/*
 * init.h
 *
 *  Created on: 2 juin 2017
 *      Author: tab
 */

#ifndef INIT_H_
#define INIT_H_

#include <stdint.h>
#include <stdio.h>
#include <string.h>
#include "nordic_common.h"
#include "nrf.h"
#include "app_error.h"
#include "ble.h"
#include "ble_hci.h"
#include "ble_srv_common.h"
#include "ble_advdata.h"
#include "ble_advertising.h"
#include "ble_conn_params.h"
#include "boards.h"
#include "softdevice_handler.h"
#include "app_timer.h"
#include "peer_manager.h"
#include "fds.h"
#include "fstorage.h"
#include "ble_conn_state.h"
#include "bsp_btn_ble.h"
#include "service_if.h"
#include "nrf_log.h"
#include "nrf_log_ctrl.h"
#include "nrf_ble_qwr.h"
#include "app.h"
#include "constant.h"

static uint16_t m_conn_handle = BLE_CONN_HANDLE_INVALID; /**< Handle of the current connection. */
static nrf_ble_qwr_t m_qwr; /**< Queued Writes structure.*/

// TODO YOUR_JOB: Use UUIDs for service(s) used in your application.
static ble_uuid_t m_adv_uuids[] = { { BLE_UUID_DEVICE_INFORMATION_SERVICE,
BLE_UUID_TYPE_BLE } }; /**< Universally unique service identifiers. */

void power_manage(void);
static void buttons_leds_init(bool *p_erase_bonds);
static void advertising_init(void);
static void peer_manager_init(bool erase_bonds);
static void pm_evt_handler(pm_evt_t const *p_evt);
void bsp_event_handler(bsp_event_t event);
static void ble_stack_init(void);
static void sys_evt_dispatch(uint32_t sys_evt);
static void ble_evt_dispatch(ble_evt_t *p_ble_evt);
static void on_ble_evt(ble_evt_t *p_ble_evt);
static void on_adv_evt(ble_adv_evt_t ble_adv_evt);
static void sleep_mode_enter(void);
static void application_timers_start(void);
static void conn_params_init(void);
static void conn_params_error_handler(uint32_t nrf_error);
static void on_conn_params_evt(ble_conn_params_evt_t *p_evt);
static void services_init(void);
static void gap_params_init(void);
static void timers_init(void);
static void fds_evt_handler(fds_evt_t const *const p_evt);
void assert_nrf_callback(uint16_t line_num,const uint8_t *p_file_name);

int main(void);

#endif /* INIT_H_ */
