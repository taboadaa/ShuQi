/* This file was generated by plugin 'Nordic Semiconductor nRF5x v.1.2.2' (BDS version 1.1.3135.0) */

#ifndef BLE_IAS_H__
#define BLE_IAS_H__

#include <stdint.h>
#include <stdbool.h>
#include "ble.h"
#include "ble_srv_common.h"
#include "app_util_bds.h"



/**@brief Immediate Alert event type. */
typedef enum
{ 
    BLE_IAS_ALERT_LEVEL_EVT_NOTIFICATION_ENABLED,  /**< Alert Level value notification enabled event. */
    BLE_IAS_ALERT_LEVEL_EVT_NOTIFICATION_DISABLED, /**< Alert Level value notification disabled event. */
    BLE_IAS_ALERT_LEVEL_EVT_WRITE, /**< Alert Level write event. */
} ble_ias_evt_type_t;

// Forward declaration of the ble_ias_t type.
typedef struct ble_ias_s ble_ias_t;






typedef enum
{ 
    ALERT_LEVEL_NO_ALERT = 0, 
    ALERT_LEVEL_MILD_ALERT = 1, 
    ALERT_LEVEL_HIGH_ALERT = 2, 
} enum_alert_level_t; 
typedef struct
{
    enum_alert_level_t alert_level; 
} alert_level_alert_level_t; 


/**@brief Alert Level structure. */
typedef struct
{
    alert_level_alert_level_t alert_level;
} ble_ias_alert_level_t;

/**@brief Immediate Alert Service event. */
typedef struct
{
    ble_ias_evt_type_t evt_type;    /**< Type of event. */
    union {
        uint16_t cccd_value; /**< Holds decoded data in Notify and Indicate event handler. */
        ble_ias_alert_level_t alert_level; /**< Holds decoded data in Write event handler. */
    } params;
} ble_ias_evt_t;

/**@brief Immediate Alert Service event handler type. */
typedef void (*ble_ias_evt_handler_t) (ble_ias_t * p_ias, ble_ias_evt_t * p_evt);

/**@brief Immediate Alert Service init structure. This contains all options and data needed for initialization of the service */
typedef struct
{
    ble_ias_evt_handler_t     evt_handler; /**< Event handler to be called for handling events in the Immediate Alert Service. */
    ble_ias_alert_level_t ble_ias_alert_level_initial_value; /**< If not NULL, initial value of the Alert Level characteristic. */ 
} ble_ias_init_t;

/**@brief Immediate Alert Service structure. This contains various status information for the service.*/
struct ble_ias_s
{
    ble_ias_evt_handler_t evt_handler; /**< Event handler to be called for handling events in the Immediate Alert Service. */
    uint16_t service_handle; /**< Handle of Immediate Alert Service (as provided by the BLE stack). */
    ble_gatts_char_handles_t alert_level_handles; /**< Handles related to the Alert Level characteristic. */
    uint16_t conn_handle; /**< Handle of the current connection (as provided by the BLE stack, is BLE_CONN_HANDLE_INVALID if not in a connection). */
};

/**@brief Function for initializing the Immediate Alert.
 *
 * @param[out]  p_ias       Immediate Alert Service structure. This structure will have to be supplied by
 *                          the application. It will be initialized by this function, and will later
 *                          be used to identify this particular service instance.
 * @param[in]   p_ias_init  Information needed to initialize the service.
 *
 * @return      NRF_SUCCESS on successful initialization of service, otherwise an error code.
 */
uint32_t ble_ias_init(ble_ias_t * p_ias, const ble_ias_init_t * p_ias_init);

/**@brief Function for handling the Application's BLE Stack events.*/
void ble_ias_on_ble_evt(ble_ias_t * p_ias, ble_evt_t * p_ble_evt);

#endif //_BLE_IAS_H__
